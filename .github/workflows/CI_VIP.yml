name: Build Padavan vipshmily/Padavan-3.4-KVR

# Controls when the action will run. 
on:
#  schedule:
#    - cron: "0 2 * * *"
  push:
    branches:
      - master
  workflow_dispatch:

env:
  build_dir: /opt/padavan                                   
  images_dir: /opt/images                                     
  work_dir: /opt/padavan/trunk                              
  config_dir: /opt/padavan/trunk/configs/templates             
  src_git: https://github.com/minax007/Padavan-3.4-KVR.git     
  
jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
    strategy:
      matrix:
        include:
          - build_variant: "mt7621"
            targets: "JDC-1"
    steps:
      - uses: actions/checkout@main    
      - uses: hendrikmuhs/ccache-action@main
      - uses: actions/setup-go@main
        with:
          go-version: '1.22.2'
          check-latest: true
          cache: false
      - name: Prepare environment     
        run: |                        
          sudo apt update
          sudo apt install libtool-bin gperf python3-docutils autopoint gettext ccache
          sudo timedatectl set-timezone 'Europe/Berlin'  
      - name: Clone source code
        run: |                        
          git clone --depth=1 $src_git $build_dir
      - name: Prepare toolchain
        run: |                        
          mkdir -p $images_dir
      - name: Modify custom configs
        run: |                        
          cd $config_dir
          for m in $targets; do if [ -f $m.config ]; then \
          echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=n" >> $m.config
          echo "CONFIG_FIRMWARE_INCLUDE_XRAY=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_TROJAN=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_SSOBFS=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_SSSERVER=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_KUMASOCKS=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_IPT2SOCKS=n" >> $m.config
          echo "CONFIG_FIRMWARE_INCLUDE_MICROSOCKS=n" >> $m.config
          echo "CONFIG_FIRMWARE_INCLUDE_NPC=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_ADBYBY=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_KOOLPROXY=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNS=y" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNSBIN=y" >> $m.config
          echo "CONFIG_FIRMWARE_INCLUDE_ADGUARDHOME=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_CLOUDFLAREDDNS=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_NVPPROXY=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_CADDY=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_CADDYBIN=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_WYY=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_WYYBIN=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_DDNSTO=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_ALDRIVER=n" >> $m.config  
          echo "CONFIG_FIRMWARE_INCLUDE_SQM=n" >> $m.config 
          echo "CONFIG_FIRMWARE_INCLUDE_WIREGUARD=n" >>.config 
          for MOD in UFSD FAT EXFAT EXT2 EXT3 EXT4 XFS FUSE SWAP; do
              sed -i "s/CONFIG_FIRMWARE_ENABLE_${MOD}=y/CONFIG_FIRMWARE_ENABLE_${MOD}=n/" $m.config; done; \
          for MOD in UVC SERIAL AUDIO LPRD U2EC HDPARM PARTED SMBD FTPD ARIA ARIA_WEB_CONTROL DUMP1090 RTL_SDR HID XFRM QOS IMQ IFB  NFSD NFSC CIFS NTFS_3G TCPDUMP SMBD36 WINS SMBD_SYSLOG RPL2TP EAP_PEAP HTTPS DROPBEAR DROPBEAR_FAST_CODE OPENVPN SSWAN XUPNPD MINIDLNA FIREFLY FFMPEG_NEW TRANSMISSION TRANSMISSION_WEB_CONTROL CURL GDUT_DRCOM DOGCOM MINIEAP NJIT_CLIENT NAPT66 SOFTETHERVPN_SERVER SOFTETHERVPN_CLIENT SOFTETHERVPN_CMD VLMCSD TTYD LRZSZ HTOP NANO IPERF3 MTR SOCAT SRELAY MENTOHUST SCUTCLIENT FRPC FRPS TUNSAFE WIREGUARD SHADOWSOCKS XRAY V2RAY TROJAN SSOBFS ADBYBY KOOLPROXY SMARTDNS SMARTDNSBIN ADGUARDHOME CADDY CADDYBIN WYY WYYBIN ZEROTIER ALIDDNS DDNSTO ALDRIVER MENTOHUST SQM DNSFORWARDER CLOUDFLAREDDNS NVPPROXY DDNS_SSL SSSERVER NPC KUMASOCKS IPT2SOCKS MICROSOCKS; do
              sed -i "s/CONFIG_FIRMWARE_INCLUDE_${MOD}=y/CONFIG_FIRMWARE_INCLUDE_${MOD}=n/" $m.config; done; \
          for MOD in IPSET SFTP OPENSSH OPENSSL_EC OPENSSL_EXE CURL; do
              sed -i "s/CONFIG_FIRMWARE_INCLUDE_${MOD}=y/CONFIG_FIRMWARE_INCLUDE_${MOD}=y/" $m.config; done; \
          fi; done
          cd $work_dir
          for m in $targets; do if [ -f $m.config ]; then echo "拷贝 $m.config"; cp -f ./$m.config $config_dir/$m.config; fi; done; \
          for m in $targets; do if [ -f public.sh ]; then echo "执行 public.sh"; sh ./public.sh; fi; if [ -f $m.sh ]; then echo "执行 $m.sh"; sh ./$m.sh; fi; done; \
          echo "TAG_ANME=$(date +%Y%m%d)" >> $GITHUB_ENV
      - name: Start build firmware
        run: |                        
          cd $build_dir
          for m in $targets; do fakeroot sudo make $m; \
          if [ $? = 0 ]; then cp -f $work_dir/images/*.trx $images_dir/vipshmily_3.4_kvr_${m}_$TAG_ANME.trx; else exit 1; fi; done; \
      - uses: actions/upload-artifact@main
        with:
          name: vipshmily_3.4_kvr_${{ env.build_variant }}
          path: ${{ env.images_dir }}
      - uses: ncipollo/release-action@main
        with:
          commit: ${{ github.sha }}
          tag: ${{ env.TAG_ANME }}
          artifacts: "${{ env.images_dir }}/*.trx"
          allowUpdates: true
