name: Build Padavan FULL

# Controls when the action will run. 
on:
#  schedule:
#    - cron: "0 2 * * *"
  push:
    branches:
      - master
  workflow_dispatch:

env:
  src_git: https://github.com/minax007/rt-n56u.git
  build_dir: /opt/rt-n56u  
  images_dir: /opt/images
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: build
    runs-on: ubuntu-20.04
    env:
      build_variant: ${{ matrix.build_variant }}
      targets: ${{ matrix.targets }}
    strategy:
      matrix:
        include:
          - build_variant: "mt7628"
            targets: "MI-RA75"
    steps:
      - uses: actions/checkout@v2
      - name: Prepare environment
        run: |
          sudo apt update
          sudo apt install libtool-bin gperf python3-docutils autopoint gettext zip
          mkdir -p $images_dir
      - name: Clone source
        run: |
          git clone --depth=1 $src_git $build_dir
          cd $build_dir
          GIT_VERSION="$(git rev-parse --short=7 HEAD 2>/dev/null)"
          build_date="$(date +%Y%m%d)"
          echo "build_date=${build_date}" >> $GITHUB_ENV
          echo "build_version=${GIT_VERSION}" >> $GITHUB_ENV
          echo "image_suffix=${GIT_VERSION}_${build_date}" >> $GITHUB_ENV
          echo "image_name=images_${build_variant}_${GIT_VERSION}" >> $GITHUB_ENV
      - name: Run shellcheck
        run: |
          cd $build_dir
          if [ -f ./trunk/tools/shellcheck.sh ]; then sh ./trunk/tools/shellcheck.sh; fi
      - name: Prepare toolchain
        run: |
          cd $build_dir/toolchain-mipsel
          sh dl_toolchain.sh
          
      - name: Modify configs
        run: |
          cd $build_dir/trunk/configs/templates
          for m in $targets; do if [ -f $m.config ]; then \
          for n in $ENABLED_CFG; do sed -i "/${n}/c${n}=y" $m.config; done; \
          for n in $DISABLED_CFG; do sed -i "/${n}/c${n}=n" $m.config; done; \
          fi; done
      # Create Release was put before "Start Build" to avoid building already existing build      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.build_version }}
          release_name: Padavan (${{ env.build_version }})
          body: |
            Build Date: ${{ env.build_date }} 
            Build Version: ${{ env.build_version }} 
          draft: false
          prerelease: false
          
      - name: Start build
        run: |
          cd $build_dir/trunk
          for m in $targets; do fakeroot ./build_firmware_ci $m; \
          if [ $? = 0 ]; then cp -f images/*.trx $images_dir/$m.trx; else exit 1; fi; \
          ./clear_tree_simple >/dev/null 2>&1; done
      - name: Upload MI-RA75
        id: upload-release-asset-MI-RA75
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /opt/images/MI-RA75.trx
          asset_name: MI-RA75_${{ env.build_date }}_${{ env.build_version }}.trx
          asset_content_type: application/bin
